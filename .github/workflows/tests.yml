name: Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: Build & Run
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install LLVM
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "15"

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release

      - name: Build for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: cmake --build ${{github.workspace}}/build --config Release
      - name: Build
        if: ${{ matrix.os != 'windows-latest' }}
        run: cmake --build ${{github.workspace}}/build

      - name: Install for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: cmake --install ${{github.workspace}}/build
      - name: Install
        if: ${{ matrix.os != 'windows-latest' }}
        run: sudo cmake --install ${{github.workspace}}/build

      - name: Show version and help for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          & "C:/Program Files (x86)/Filc/bin/filc.exe"
          & "C:/Program Files (x86)/Filc/bin/filc.exe" version
      - name: Show version and help
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          filc
          filc version

  unit-tests:
    name: Unit tests
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup LCOV
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: hrishikesh-kadam/setup-lcov@v1
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install LLVM
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "15"

      - name: Configure CMake
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DCODE_COVERAGE=ON
      - name: Configure CMake
        if: ${{ matrix.os != 'ubuntu-latest' }}
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON

      - name: Build
        run: cmake --build ${{github.workspace}}/build --target unit-tests

      - name: Run tests
        run: cd ${{github.workspace}}/build && ctest -L unit --output-on-failure

      - name: Generate coverage report
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: ${{github.workspace}}/bin/generate_coverage.sh
      - name: Upload coverage report to Codecov
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{github.workspace}}/coverage.info
      - name: Upload coverage report to Codacy
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ${{github.workspace}}/coverage.info

  cppcheck:
    if: github.event_name != 'pull_request'
    name: Static Analysis
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4

      - name: cppcheck
        uses: deep5050/cppcheck-action@v3.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN}}
          std: c++17
          force_language: c++

  e2e-tests:
    name: e2e tests
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install LLVM
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "15"

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON

      - name: Build
        run: cmake --build ${{github.workspace}}/build --target e2e-tests

      - name: Run tests
        run: cd ${{github.workspace}}/build && ctest -L e2e --output-on-failure

name: Packaging

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - dev-build
    tags:
      - '*'

jobs:
  build:
    name: "[${{ matrix.job.os }}] - ${{ matrix.job.target }}"
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: arm-unknown-linux-gnu    , os: ubuntu-20.04, pkg-name: arm   }
          - { target: x86_64-unknown-linux-gnu , os: ubuntu-20.04, pkg-name: amd64 }
          - { target: i386-unknown-linux-gnu   , os: ubuntu-20.04, pkg-name: i386  }
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install LLVM
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "15"
          env: true
      - name: Install libstdc++-devel
        run: apt install libstdc++-devel

      - name: Configure CMake
        run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=Release --toolchain=cmake/toolchains/${{ matrix.job.target }}.toolchain.cmake

      - name: Build
        run: cmake --build ${{ github.workspace }}/build --target filc

      - name: Get metadata
        id: metadata
        run: |
          BINARY_PATH=${{ github.workspace }}/build/filc
          echo "BINARY_PATH=${BINARY_PATH}" >> $GITHUB_OUTPUT
          
          PACKAGE_VERSION=$(cat VERSION)
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT

      - name: "Artifact upload: binary" # Temp, will be replaced by tarball
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.job.pkg-name }}_${{ matrix.job.os }}-v${{ steps.metadata.outputs.PACKAGE_VERSION }}
          path: ${{ steps.metadata.outputs.BINARY_PATH }}
